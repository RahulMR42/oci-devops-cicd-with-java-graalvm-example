version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  # these are local variables to the build config
  variables:
    graal_vm_version: "21.3.0"
    code_repo_name: "oci-java-graalvm-devops-example"

  # the value of a vaultVariable is the secret-id (in OCI ID format) stored in the OCI Vault service
  # you can then access the value of that secret in your build_spec.yaml commands
  vaultVariables:
  #  EXAMPLE_SECRET: "YOUR-SECRET-OCID"
  
  # exportedVariables are made available to use as parameters in sucessor Build Pipeline stages
  # For this Build to run, the Build Pipeline needs to have a BUILDRUN_HASH parameter set
  exportedVariables:
    - BUILDRUN_HASH

steps:
  - type: Command
    name: "Define unique image tag"
    timeoutInSeconds: 40
    command: |
      export BUILDRUN_HASH=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      echo "BUILDRUN_HASH: " $BUILDRUN_HASH

  - type: Command
    timeoutInSeconds: 600
    name: "Build Prerequisites"
    command: |
      cd ${OCI_WORKSPACE_DIR}/${code_repo_name}
      java -version
      wget -q https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${graal_vm_version}/graalvm-ce-java17-linux-amd64-${graal_vm_version}.tar.gz
      tar zxf graalvm-ce-java17-linux-amd64-${graal_vm_version}.tar.gz
      export java_graal_home=./graalvm-ce-java17-${graal_vm_version}/bin/
      ${java_graal_home}/java -version
      ${java_graal_home}/javac helloworld.java
      ${java_graal_home}/java HelloWorld

      
# outputArtifacts:
#   - name: output01
#     type: DOCKER_IMAGE
#     # this location tag doesn't effect the tag used to deliver the container image
#     # to the Container Registry
#     location: node-express-getting-starter:latest